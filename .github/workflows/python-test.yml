name: Checks

on: [push, pull_request]

jobs:
  test-coverage:
    name: Test Coverage (Python ${{ matrix.python-version }} AllianceAuth v${{ matrix.aa-version }} ${{ matrix.database }})
    runs-on: ubuntu-latest

    services:
      database:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps port 6379 on service container to the host
          - 6379:6379

    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11-dev"]
        aa-version: ["2", "3"]
        database: ["postgres", "mysql"]
        exclude:
          - python-version: "3.7"
            aa-version: "3"

    steps:
      - name: Set up MySQL
        run: sudo /etc/init.d/mysql start
        if: matrix.database == 'mysql'

      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          check-latest: true

      - name: Install Tox and any other packages
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade tox tox-gh-actions

      - name: Run Tox
        run: tox -v
        env:
          AAVERSION: ${{ matrix.aa-version }}
          DATABASEENGINE: ${{ matrix.database }}

      - name: Upload Coverage Artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage-python${{ matrix.python-version }}-AA${{ matrix.aa-version }}-${{ matrix.database }}
          path: coverage.xml
          if-no-files-found: ignore

  upload-coverage:
    name: Upload to Codecov
    runs-on: ubuntu-latest
    needs: [test-coverage]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos but fails for rate limits
          directory: artifacts
          fail_ci_if_error: true # optional (default = false)
          verbose: true # optional (default = false)

  build-test:
    needs: [test-coverage]
    name: PyPi Build Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Tools
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade build setuptools wheel
      - name: Package Build
        env:
          STACKMANAGER_VERSION: 9999
        run: python -m build

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: dist
          if-no-files-found: ignore
